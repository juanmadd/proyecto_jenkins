/*
 * To change this template, choose Tools | Templates
 * and open the template in the editor.
 */
package adglobal;

import java.sql.Connection;
import java.sql.DatabaseMetaData;
import java.sql.DriverManager;
import java.sql.PreparedStatement;
import java.sql.ResultSet;
import java.sql.SQLException;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javafx.scene.control.ComboBox;
import java.util.ArrayList;

/**
 *
 * @author Jose
 */
public class JFPresentacion extends javax.swing.JFrame {

    /**
     * Creates new form JFPresentacion
     */
    public JFPresentacion() {
        initComponents();
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jPanel2 = new javax.swing.JPanel();
        jRadioButton1 = new javax.swing.JRadioButton();
        jRadioButton4 = new javax.swing.JRadioButton();
        jRadioButton3 = new javax.swing.JRadioButton();
        jRadioButton2 = new javax.swing.JRadioButton();
        jRadioButton5 = new javax.swing.JRadioButton();
        jToggleButton1 = new javax.swing.JToggleButton();
        jToggleButton2 = new javax.swing.JToggleButton();

        setDefaultCloseOperation(javax.swing.WindowConstants.EXIT_ON_CLOSE);

        jPanel1.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jPanel2.setBorder(javax.swing.BorderFactory.createTitledBorder(""));

        jRadioButton1.setText("Crear esquema base de datos");
        jRadioButton1.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButton1MouseClicked(evt);
            }
        });
        jRadioButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton1ActionPerformed(evt);
            }
        });

        jRadioButton4.setText("Consultas");
        jRadioButton4.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButton4MouseClicked(evt);
            }
        });
        jRadioButton4.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton4ActionPerformed(evt);
            }
        });

        jRadioButton3.setText("Editar datos en tabla login");
        jRadioButton3.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButton3MouseClicked(evt);
            }
        });
        jRadioButton3.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton3ActionPerformed(evt);
            }
        });

        jRadioButton2.setText("Insertar datos de tabla login");
        jRadioButton2.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButton2MouseClicked(evt);
            }
        });
        jRadioButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jRadioButton2ActionPerformed(evt);
            }
        });

        jRadioButton5.setText("Borrar usuarios en login");
        jRadioButton5.addMouseListener(new java.awt.event.MouseAdapter() {
            public void mouseClicked(java.awt.event.MouseEvent evt) {
                jRadioButton5MouseClicked(evt);
            }
        });

        javax.swing.GroupLayout jPanel2Layout = new javax.swing.GroupLayout(jPanel2);
        jPanel2.setLayout(jPanel2Layout);
        jPanel2Layout.setHorizontalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addGroup(jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
                    .addComponent(jRadioButton5)
                    .addComponent(jRadioButton3)
                    .addComponent(jRadioButton4)
                    .addComponent(jRadioButton2)
                    .addComponent(jRadioButton1))
                .addContainerGap())
        );
        jPanel2Layout.setVerticalGroup(
            jPanel2Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel2Layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jRadioButton1)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton3)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton2)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton4)
                .addGap(18, 18, 18)
                .addComponent(jRadioButton5)
                .addContainerGap())
        );

        jToggleButton1.setText("Ok");
        jToggleButton1.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton1ActionPerformed(evt);
            }
        });

        jToggleButton2.setText("Salir");
        jToggleButton2.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                jToggleButton2ActionPerformed(evt);
            }
        });

        javax.swing.GroupLayout jPanel1Layout = new javax.swing.GroupLayout(jPanel1);
        jPanel1.setLayout(jPanel1Layout);
        jPanel1Layout.setHorizontalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addContainerGap(215, Short.MAX_VALUE)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addGap(162, 162, 162))
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(233, 233, 233)
                .addComponent(jToggleButton1)
                .addGap(18, 18, 18)
                .addComponent(jToggleButton2)
                .addContainerGap(javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE))
        );
        jPanel1Layout.setVerticalGroup(
            jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(jPanel1Layout.createSequentialGroup()
                .addGap(107, 107, 107)
                .addComponent(jPanel2, javax.swing.GroupLayout.PREFERRED_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.PREFERRED_SIZE)
                .addPreferredGap(javax.swing.LayoutStyle.ComponentPlacement.UNRELATED)
                .addGroup(jPanel1Layout.createParallelGroup(javax.swing.GroupLayout.Alignment.BASELINE)
                    .addComponent(jToggleButton1)
                    .addComponent(jToggleButton2))
                .addContainerGap(122, Short.MAX_VALUE))
        );

        javax.swing.GroupLayout layout = new javax.swing.GroupLayout(getContentPane());
        getContentPane().setLayout(layout);
        layout.setHorizontalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(javax.swing.GroupLayout.Alignment.TRAILING, layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );
        layout.setVerticalGroup(
            layout.createParallelGroup(javax.swing.GroupLayout.Alignment.LEADING)
            .addGroup(layout.createSequentialGroup()
                .addContainerGap()
                .addComponent(jPanel1, javax.swing.GroupLayout.DEFAULT_SIZE, javax.swing.GroupLayout.DEFAULT_SIZE, Short.MAX_VALUE)
                .addContainerGap())
        );

        pack();
    }// </editor-fold>//GEN-END:initComponents

    private void jRadioButton1MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButton1MouseClicked
        jRadioButton2.setSelected(false);
        jRadioButton3.setSelected(false);
        jRadioButton4.setSelected(false);
        jRadioButton5.setSelected(false);       
    }//GEN-LAST:event_jRadioButton1MouseClicked

    private void jRadioButton3MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButton3MouseClicked
        jRadioButton1.setSelected(false);
        jRadioButton2.setSelected(false);
        jRadioButton4.setSelected(false);
        jRadioButton5.setSelected(false);
    }//GEN-LAST:event_jRadioButton3MouseClicked

    private void jRadioButton2MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButton2MouseClicked
        jRadioButton1.setSelected(false);
        jRadioButton3.setSelected(false);
        jRadioButton4.setSelected(false);
        jRadioButton5.setSelected(false);
    }//GEN-LAST:event_jRadioButton2MouseClicked

    private void jRadioButton4MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButton4MouseClicked
        jRadioButton1.setSelected(false);
        jRadioButton2.setSelected(false);
        jRadioButton3.setSelected(false);
        jRadioButton5.setSelected(false);
        
    }//GEN-LAST:event_jRadioButton4MouseClicked

    private void jRadioButton5MouseClicked(java.awt.event.MouseEvent evt) {//GEN-FIRST:event_jRadioButton5MouseClicked
        jRadioButton1.setSelected(false);
        jRadioButton2.setSelected(false);
        jRadioButton3.setSelected(false);
        jRadioButton4.setSelected(false);
    }//GEN-LAST:event_jRadioButton5MouseClicked

    private void jToggleButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton1ActionPerformed
        try {
            final String url = "jdbc:mysql://localhost:3306/login";
            final String user = "root";
            final String password = "123456";
            Connection conexion = null;
           
            ResultSet result = null;
           
            DatabaseMetaData dbmd;
          
            Class.forName("com.mysql.jdbc.Driver").newInstance();
           
            conexion = DriverManager.getConnection(url, user, password);
            if (jRadioButton1.isSelected()) {
                ADGlobal.crea_bd(conexion);
            }
            /*
             * Inserción de datos en cada tabla. 
                a. Debes realizar un procedimiento almacenado que permita insertar los datos de los personas. Este 
                procedimiento debe actualizar la tabla cursos incrementado el campo numalum en 1, sin pasarse de 
                30.
                b. Inserta al menos 2 cursos (1º DAM y 2º DAM). 
                c. Inserta un mínimo de 4 personas en cada curso.
                d. Inserta las asignaturas de cada curso.
             */
            if (jRadioButton2.isSelected()) 
            {
                  ADGlobal.inserta_usu(conexion);
//                ADGlobal.inserta_notas(conexion);
            }
//            /*
//             *3. Modifica la tabla ‘notas’ para que incluya un nuevo campo como clave primaria, el número de evaluación, y 
//                así poder almacenar todas las notas de los personas por evaluaciones.
//             */
            if (jRadioButton3.isSelected()) //insertar datos en tabla
            {
                 String sql="SELECT login FROM login"; 
                
            PreparedStatement pspt=(PreparedStatement)conexion.prepareStatement(sql);
           // pspt.setString(1,curso);
            ResultSet resulta=pspt.executeQuery();
    //           System.out.println(result.getRow());
            ArrayList valores = new ArrayList<String>();    
            
            while (resulta.next())
            {
                valores.add(resulta.getString(1));
                System.out.println(resulta.getRow());
               //System.out.println(result.getRow());
               //System.out.println("curso :"+result.getString(1)+" nomcurso :"+result.getString(2)+" numalum :"+result.getString(3));
               // possibleValues.addItem(resulta.getString("login"));
            }
            Object[] possibleValues = valores.toArray();  
           // Object[] possibleValues = { "Modifica Datos Alumno", "Modifica Nota Alumno", "Elimina alumno","Elimina curso","Elimina asignatura" };
        

            Object selectedValue = JOptionPane.showInputDialog(null,"Escoge", "Escoge",JOptionPane.QUESTION_MESSAGE, null,possibleValues, possibleValues[0]);

                ADGlobal.modifica_usu(conexion,String.valueOf(selectedValue));
//                 Object[] possibleValues = { "Inserta dos cursos", "Probar procd.Inserta + de 30 alumnos", "Insertar asignaturas" ,"Insertar notas" };
//                Object selectedValue = JOptionPane.showInputDialog(null,"Choose one", "Input", JOptionPane.INFORMATION_MESSAGE, null,possibleValues, possibleValues[0]);
//                if ((String.valueOf(selectedValue)).compareTo("Inserta dos cursos")==0) {
//                    EjLogin.insertar_usuario(conexion);
//                }
//                if ((String.valueOf(selectedValue)).compareTo("Probar procd.Inserta + de 30 alumnos")==0) {
//                    EjLogin.procd_alm_inserta_mas_de_30_alumnos(conexion);
//                }
//                if ((String.valueOf(selectedValue)).compareTo("Insertar asignaturas")==0) {
//                    EjLogin.inserta_asignaturas(conexion);
//                }
               // if ((String.valueOf(selectedValue)).compareTo("Insertar notas")==0)
       //             EjLogin.inserta_notas(conexion);
            }
//    //        4. Consultas: las consultas que se van a realizar de manera sistemática (conviene plantearlas con sentencias 
//                //preparadas) son las siguientes:
//                //a. Listado de notas para una determinada asignatura mostrando el nombre de la asignatura, y para cada 
//                //personas que la cursa su nombre, curso y calificación en cada evaluación. El listado de mayor a menor 
//                //nota.
//                //b. Consulta de los personas de un determinado curso. 
//                //c. Total de personas por curso, mostrando también el nombre del curso, y ordenado de menos a más 
//                //personas. Crea una vista para ello.
            if (jRadioButton4.isSelected()) //consultas
            {
                ADGlobal.consulta_usu(conexion); 
//               Object[] possibleValues = { "Consultar usuarios"};
//               Object selectedValue = JOptionPane.showInputDialog(null,"Escoge", "Escoge",JOptionPane.QUESTION_MESSAGE, null,possibleValues, possibleValues[0]);
//               //System.out.println(selectedValue);
//               if ((String.valueOf(selectedValue)).compareTo("Consultar usuarios")==0) 
//               {               
              
//                  Object [] asignaturas={"Bases de Datos",
//                                    "Entornos de Desarrollo",
//                                    "Programación",
//                                    "Sistemas Informáticos",
//                                    "Lenguajes de Marcas",
//                                    "Fund. de Orientación Lab",
//                                    "Acceso a Datos",
//                                    "Desarrollo de Interfaces",
//                                    "Progr de Servicios y Procesos",
//                                    "Sist. de Gest. Empresarial",
//                                    "Prog. Mult. y Disp. Móv."};
//                  Object selectedValue2 = JOptionPane.showInputDialog(null,"Escoge", "Escoge", JOptionPane.INFORMATION_MESSAGE, null,asignaturas, asignaturas[0]); 
//               }
//               if ((String.valueOf(selectedValue)).compareTo("Consulta personas por curso")==0) 
//               {
//                   Object [] cursos={"1","2"};
//                   Object selectedValue3 = JOptionPane.showInputDialog(null,"Escoge", "Escoge", JOptionPane.INFORMATION_MESSAGE, null,cursos, cursos[0]);  
//                   ADGlobal.consulta_personas(conexion,String.valueOf(selectedValue3));
//               }
//               if ((String.valueOf(selectedValue)).compareTo("Total de personas por curso")==0) 
//               {
//                   ADGlobal.vista_total_alumnos(conexion);
//               }
//               
            }
//    //        5. Actualizaciones: solo algunas interesan tenerlas precompiladas (se indica cuales):
//    //a. Modificación de los datos de un determinado personas, su nombre y dirección.
//    //b. Modificación de la nota de un determinado personas en cierta asignatura y cierta evaluación (es algo 
//    //frecuente- sentencia preparada).
//    //c. Eliminación de un determinado personas.
//    //d. Eliminación de un curso. No podrá eliminarse si tiene personas.
//    //e. Eliminación de una asignatura. No podrá eliminarse si hay notas registradas de ella.
            int eleccion=0;
            if (jRadioButton5.isSelected()) //actualizaciones
            {
                   //Consulta de los alumnos de un determinado curso.
            String sql="SELECT login FROM login"; 
                
            PreparedStatement pspt=(PreparedStatement)conexion.prepareStatement(sql);
           // pspt.setString(1,curso);
            ResultSet resulta=pspt.executeQuery();
    //           System.out.println(result.getRow());
            ArrayList valores = new ArrayList<String>();    
            
            while (resulta.next())
            {
                valores.add(resulta.getString(1));
                System.out.println(resulta.getRow());
               //System.out.println(result.getRow());
               //System.out.println("curso :"+result.getString(1)+" nomcurso :"+result.getString(2)+" numalum :"+result.getString(3));
               // possibleValues.addItem(resulta.getString("login"));
            }
            Object[] possibleValues = valores.toArray();  
           // Object[] possibleValues = { "Modifica Datos Alumno", "Modifica Nota Alumno", "Elimina alumno","Elimina curso","Elimina asignatura" };
        

            Object selectedValue = JOptionPane.showInputDialog(null,"Escoge", "Escoge",JOptionPane.QUESTION_MESSAGE, null,possibleValues, possibleValues[0]);

                String usuario = String.valueOf(selectedValue);
                    
                    eleccion=JOptionPane.showConfirmDialog(null, "¿seguro que deseas eliminar el usuario?");
                    if (eleccion==0) {
                       ADGlobal.elimina_usu(conexion, usuario);
                   }
                
//               Object[] possibleValues = { "Modifica Datos Alumno", "Modifica Nota Alumno", "Elimina alumno","Elimina curso","Elimina asignatura" };
//               Object selectedValue = JOptionPane.showInputDialog(null,"Escoge", "Escoge",JOptionPane.QUESTION_MESSAGE, null,possibleValues, possibleValues[0]);
//               
//               if ((String.valueOf(selectedValue)).compareTo("Modifica Datos Alumno")==0) 
//               {
//                   //Es necesario poner a mano el numero de alumno
//                    EjLogin.modifica_alumno(conexion,1,"Menganito","Madrid");
//               }
//               if ((String.valueOf(selectedValue)).compareTo("Modifica Nota Alumno")==0)
//               {
//                    //Es necesario poner a mano cod_alumno,cod_asignatura,nºevaluacion y nota
//                    EjLogin. modif_nota_alumno(conexion,2,5,3,10);
//               }
//               if ((String.valueOf(selectedValue)).compareTo("Elimina alumno")==0) {
//                    eleccion=JOptionPane.showConfirmDialog(null, "¿Esta seguro?");
//                    if (eleccion==0) {
//                       EjLogin.elimina_alumno(conexion,3);
//                   }
//                }
//               if ((String.valueOf(selectedValue)).compareTo("Elimina curso")==0) {
//                   eleccion=JOptionPane.showConfirmDialog(null, "¿Esta seguro?");
//                    if (eleccion==0) {
//                       
//                   }
//                }
//               if ((String.valueOf(selectedValue)).compareTo("Elimina asignatura")==0) {
//                   eleccion=JOptionPane.showConfirmDialog(null, "¿Esta seguro?");
//                    if (eleccion==0) {
//                       EjLogin.elimina_asignatura(conexion,1);
//                   }
//                }
            }
            jToggleButton1.setSelected(false);
        } catch (SQLException ex) {
            JOptionPane.showMessageDialog(null,"Ha ocurrido una SQL Exception :"+ex);
//            Logger.getLogger(JFPresentacion.class.getName()).log(Level.SEVERE, null, ex);
        } catch (ClassNotFoundException ex) {
            JOptionPane.showMessageDialog(null,"Ha ocurrido una ClassNotFoundException Exception :"+ex);
//            Logger.getLogger(JFPresentacion.class.getName()).log(Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            JOptionPane.showMessageDialog(null,"Ha ocurrido una InstanciationException :"+ex);
//            Logger.getLogger(JFPresentacion.class.getName()).log(Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            JOptionPane.showMessageDialog(null,"Ha ocurrido una IllegalAccessException :"+ex);
//            Logger.getLogger(JFPresentacion.class.getName()).log(Level.SEVERE, null, ex);
        }
    }//GEN-LAST:event_jToggleButton1ActionPerformed

    private void jToggleButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jToggleButton2ActionPerformed
        dispose();
    }//GEN-LAST:event_jToggleButton2ActionPerformed

    private void jRadioButton1ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton1ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton1ActionPerformed

    private void jRadioButton2ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton2ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton2ActionPerformed

    private void jRadioButton3ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton3ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton3ActionPerformed

    private void jRadioButton4ActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_jRadioButton4ActionPerformed
        // TODO add your handling code here:
    }//GEN-LAST:event_jRadioButton4ActionPerformed

    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        /* Set the Nimbus look and feel */
        //<editor-fold defaultstate="collapsed" desc=" Look and feel setting code (optional) ">
        /* If Nimbus (introduced in Java SE 6) is not available, stay with the default look and feel.
         * For details see http://download.oracle.com/javase/tutorial/uiswing/lookandfeel/plaf.html 
         */
        try {
            for (javax.swing.UIManager.LookAndFeelInfo info : javax.swing.UIManager.getInstalledLookAndFeels()) {
                if ("Nimbus".equals(info.getName())) {
                    javax.swing.UIManager.setLookAndFeel(info.getClassName());
                    break;
                }
            }
        } catch (ClassNotFoundException ex) {
            java.util.logging.Logger.getLogger(JFPresentacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (InstantiationException ex) {
            java.util.logging.Logger.getLogger(JFPresentacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (IllegalAccessException ex) {
            java.util.logging.Logger.getLogger(JFPresentacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        } catch (javax.swing.UnsupportedLookAndFeelException ex) {
            java.util.logging.Logger.getLogger(JFPresentacion.class.getName()).log(java.util.logging.Level.SEVERE, null, ex);
        }
        //</editor-fold>

        /* Create and display the form */
        java.awt.EventQueue.invokeLater(new Runnable() {
            public void run() {
                new JFPresentacion().setVisible(true);
            }
        });
    }
    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JRadioButton jRadioButton1;
    private javax.swing.JRadioButton jRadioButton2;
    private javax.swing.JRadioButton jRadioButton3;
    private javax.swing.JRadioButton jRadioButton4;
    private javax.swing.JRadioButton jRadioButton5;
    private javax.swing.JToggleButton jToggleButton1;
    private javax.swing.JToggleButton jToggleButton2;
    // End of variables declaration//GEN-END:variables
}
